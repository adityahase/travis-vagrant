os: linux
dist: bionic
language: ruby

addons:
  apt:
    sources:
    - sourceline: 'deb https://apt.releases.hashicorp.com bionic main'
      key_url: 'https://apt.releases.hashicorp.com/gpg'
    update: true
    packages:
    - qemu-kvm
    - qemu-utils
    - dnsmasq-base
    - libvirt-daemon-system 
    - libvirt-dev
    - bridge-utils
    - cloud-utils
    - packer

install:
  - sudo usermod -aG kvm $USER
  - sudo usermod -aG libvirt $USER
  - wget https://releases.hashicorp.com/vagrant/2.2.10/vagrant_2.2.10_x86_64.deb
  - sudo dpkg -i vagrant_2.2.10_x86_64.deb
  - vagrant plugin install vagrant-libvirt

before_script:
  # - cloud-localds seed.img init.yml
  - wget https://raw.githubusercontent.com/vagrant-libvirt/vagrant-libvirt/master/tools/create_box.sh
  - chmod 700 create_box.sh

jobs:
  include:
  # - name: Ubuntu Bionic KVM Build
  #   script:
  #   - wget https://cloud-images.ubuntu.com/releases/bionic/release/ubuntu-18.04-server-cloudimg-amd64.img -O ubuntu.img
  #   - qemu-img convert -O qcow2 ubuntu.img ubuntu.qcow2
  #   - qemu-img resize ubuntu.qcow2 +50G
  #   - sudo virt-install --name ubuntu --memory 2048 --vcpus 2 --disk seed.img,device=cdrom --disk ubuntu.qcow2,device=disk,bus=virtio --boot hd --virt-type kvm --os-variant ubuntu18.04

  # - name: Ubuntu Bionic Vagrant Image
  #   script:
  #   - wget https://cloud-images.ubuntu.com/releases/bionic/release-20200701/ubuntu-18.04-server-cloudimg-amd64-vagrant.box -O ubuntu.box
  #   - vagrant box add ubuntu.box --name ubuntu
  #   - vagrant init ubuntu
  #   - vagrant up --provider=libvirt --debug
  #   - vagrant ssh

  # - name: Ubuntu Bionic KVM Image
  #   script:
  #   - wget https://cloud-images.ubuntu.com/releases/bionic/release-20200701/ubuntu-18.04-server-cloudimg-amd64.img -O ubuntu.img
  #   - qemu-img convert -O qcow2 ubuntu.img ubuntu.qcow2
  #   - qemu-img resize ubuntu.qcow2 +50G
  #   - ./create_box.sh ubuntu.qcow2 ubuntu.box
  #   - vagrant box add ubuntu.box --name ubuntu
  #   - vagrant init ubuntu
  #   - sudo -E su $USER -c 'vagrant up --provider=libvirt --debug'
  #   - sudo -E su $USER -c 'vagrant ssh'

  # - name: Ubuntu Focal KVM Disk Image
  #   script:
  #   - wget https://cloud-images.ubuntu.com/releases/focal/release-20200701/ubuntu-20.04-server-cloudimg-amd64-disk-kvm.img -O ubuntu.img
  #   - qemu-img convert -O qcow2 ubuntu.img ubuntu.qcow2
  #   - qemu-img resize ubuntu.qcow2 +50G
  #   - ./create_box.sh ubuntu.qcow2 ubuntu.box
  #   - vagrant box add ubuntu.box --name ubuntu
  #   - vagrant init ubuntu
  #   - sudo -E su $USER -c 'vagrant up --provider=libvirt --debug'
  #   - sudo -E su $USER -c 'vagrant ssh'

  # - name: Ubuntu Focal KVM Image
  #   script:
  #   - wget https://cloud-images.ubuntu.com/releases/focal/release-20200701/ubuntu-20.04-server-cloudimg-amd64.img -O ubuntu.img
  #   - qemu-img convert -O qcow2 ubuntu.img ubuntu.qcow2
  #   - qemu-img resize ubuntu.qcow2 +50G
  #   - ./create_box.sh ubuntu.qcow2 ubuntu.box
  #   - vagrant box add ubuntu.box --name ubuntu
  #   - vagrant init ubuntu
  #   - sudo -E su $USER -c 'vagrant up --provider=libvirt --debug'
  #   - sudo -E su $USER -c 'vagrant ssh'
  - name: Packer Bionic Build
    script:
    - git clone https://github.com/chef/bento
    - cd bento/packer_templates/ubuntu
    - sed -i '/"type": "qemu"/a \ \ \ \ \ \ "display": "none",' ubuntu-18.04-amd64.json
    - packer build -only=qemu ubuntu-18.04-amd64.json
    - cd ../../builds
    - ls -R
    - vagrant box add ubuntu-18.04.qemu.box --name ubuntu
    - vagrant init ubuntu
    - sudo -E su $USER -c 'vagrant up --provider=libvirt --debug'
    - sudo -E su $USER -c 'vagrant ssh'

  - name: Packer Focal Build
    script:
    - git clone https://github.com/chef/bento
    - cd bento/packer_templates/ubuntu
    - sed -i '/"type": "qemu"/a \ \ \ \ \ \ "display": "none",' ubuntu-20.04-amd64.json
    - packer build -only=qemu ubuntu-20.04-amd64.json
    - cd ../../builds
    - ls -R
    - vagrant box add ubuntu-20.04.qemu.box --name ubuntu
    - vagrant init ubuntu
    - sudo -E su $USER -c 'vagrant up --provider=libvirt --debug'
    - sudo -E su $USER -c 'vagrant ssh'


